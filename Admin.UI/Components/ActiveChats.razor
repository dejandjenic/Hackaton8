@using Admin.UI.Services
@using Shared

@if (Chats == null)
{
    <p>
        <em>No data</em>
    </p>
}
else
{
    <table class="table" id="chats">
        <thead>
        <tr>
            <th>User</th>
            <th>Chat Name</th>
            <th>Status</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var chat in Chats)
        {
                <tr class="@(chat.IsPaused ? "danger" : "okay")">
                <td><div class="user_info" @onclick="() => ChatSelected(chat.UserId)">@chat.UserId
                    @if (UserIdsForAssistance.Contains(chat.UserId))
                    {
                        <div>
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-diamond-fill" viewBox="0 0 16 16">
                                <path d="M9.05.435c-.58-.58-1.52-.58-2.1 0L.436 6.95c-.58.58-.58 1.519 0 2.098l6.516 6.516c.58.58 1.519.58 2.098 0l6.516-6.516c.58-.58.58-1.519 0-2.098L9.05.435zM8 4c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995A.905.905 0 0 1 8 4m.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2"></path>
                            </svg>
                        </div>
                    }
                    </div></td>
                    <td><div>@chat.Name</div></td>
                    <td><div style="font-weight:bold">@(chat.IsPaused ? "Paused" : "Not Paused")</div></td>
            </tr>
        }
        </tbody>
    </table>
}


@code {

    [Parameter]
    public List<ChatUserEvent> Chats { get; set; } = new();
    [Parameter]
    public List<string> UserIdsForAssistance { get; set; } = new();

    [Parameter]
    public Func<string,Task> OnSelect { get; set; }
    private async Task ChatSelected(string id)
    {
        await OnSelect(id);
        //tabs.Ids.Add(id);
        Console.WriteLine("chat selected");
    }
}