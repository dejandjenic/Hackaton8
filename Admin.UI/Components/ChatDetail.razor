@using Admin.UI.Services
@using Shared
@using Admin.UI.ApiClients
@inject BackendApiClient client;
@inject ChatService chatService;

<div class="chat_detail">
@if (!IsPaused)
{
    <div class="ai_button">
        <button @onclick="PauseChat" id="pause_bttn" class="send_button">Pause</button>
    </div>
}
else
{
    <div class="ai_button">
        <button @onclick="ResumeChat" class="send_button">Resume as AI</button>
    </div>
}
    <div class="chat_messages">
        <ul id="messages">
            @foreach (var it in data)
            {
                <li class="@(it.FromUser?"user":"system")">
                    <div class="msg_info">
                        <div class="msg_info_name">@(it.FromUser ? "User - "+@it.UserId : "Assistant")

                        </div>
                    </div>

                    <div class="msg_text">
                        @it.Text
                    </div>
                </li>
            }
        </ul>
    </div>
@if (IsPaused)
{
    <div class="question_section">
        <textarea @bind="Text" placeholder="Type something ..." class="text_question"></textarea>
        <button @onclick="SendMessage" class="send_button">send</button>
    </div>
}
</div>
@code {

    [Parameter]
    public List<ChatUserEventMessage> data { get; set; } = new();

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public bool IsPaused { get; set; }
    public string Text { get; set; }

    private async Task SendMessage()
    {
        var text = Text;
        Text = "";
        chatService.Message(Id, text);
    }

    private async Task PauseChat()
    {
        await client.PauseChat(Id, true);
    }

    private async Task ResumeChat()
    {
        await client.PauseChat(Id, false);
    }
}