@using Admin.UI.Services

<CascadingValue Value="this">
    <div class="btn-group" role="group">
        @foreach (TabPage tabPage in Pages)
        {
            <span
                class="btn @GetButtonClass(tabPage)"
                @onclick=@(() => ActivatePage(tabPage))>
                @tabPage.Text
                @if (Pages.IndexOf(tabPage) > 0)
                {
                    <button @onclick="async () => await OnRemoveLocal(tabPage.Id)">x</button>
                }
            </span>
        }
    </div>
    @ChildContent
</CascadingValue>

@code {

    private async Task OnRemoveLocal(string id)
    {
        await OnRemove(id);
        Pages.Remove(Pages.FirstOrDefault(x => x.Id == id));
    }

    [Parameter]
    public Func<string, Task> OnRemove { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public TabPage ActivePage { get; set; }
    List<TabPage> Pages = new();

    internal void AddPage(TabPage tabPage)
    {
        Pages.Add(tabPage);
        if (Pages.Count == 1)
            ActivePage = tabPage;
        StateHasChanged();
    }

    string GetButtonClass(TabPage page)
    {
        return page == ActivePage ? "btn-primary" : "btn-secondary";
    }

    void ActivatePage(TabPage page)
    {
        ActivePage = page;
    }

}