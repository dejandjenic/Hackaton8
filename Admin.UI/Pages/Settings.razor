@page "/settings"
@using Admin.UI.ApiClients
@using Admin.UI.Services
@using Shared
@using System.Net.Mime
@using Microsoft.AspNetCore.Authorization
@inject BackendApiClient api
@attribute [Authorize]
@inject IToastService toastService
@inject SettingsService settingsService
@inject KnowledgeBaseSettingsService KnowledgeBaseSettingsService

<PageTitle>Counter</PageTitle>

<h1>Settings</h1>

<Tabs AllowTabPageRemoval="false">
    <TabPage Text="Bot settings">
        <p>this settings are you when initializing bot and describing its use within the system.</p>
        <textarea rows="20" style="width:100%" @bind="botSettings"/>
        <br/>
        <button class="btn-primary" @onclick="SaveBotSettings">Save</button>
    </TabPage>
    <TabPage Text="Knowledge base">
        <div class="row">
@if (!isLoading)
{
    <div class="col-2">
        <a href="javascript:void(0)" @onclick="() => { modal.Open(); }">add</a>
        <ul class="pages">
            @foreach (var p in pages)
            {
                <li><span @onclick="async () => await SelectPage(p.Id, p.Name, p.Content)">@p.Name</span></li>
            }
        </ul>
    </div>
    <div class="col-10">
        @* @foreach (var line in lines) *@
        @* { *@
        @*     <input class="line" value="@line"/> *@
        @* } *@
        @* @if (!lines.Any() && !string.IsNullOrWhiteSpace(selectedPageId)) *@
        @* { *@
        @*     <input class="line" value=""/> *@
        @* } *@
        <label>Name</label>
        <input @bind=selectedPageName/><br/>
        <label>Content</label>
        <textarea @bind=selectedPageText style="width:100%" rows="20"></textarea>
        <br/>
        <button @onclick="SavePageContent" class="btn-primary">Save changes</button>
    </div>
}
else
{
    <span>loading...</span>
}
        </div>
    </TabPage>

</Tabs>

<Modal @ref="modal">
    <Title>
        @GetDialogTitle()
    </Title>
    <Body>
        <p>
            <input @bind="newPageText"/>
        </p>
    </Body>
    <Footer>
        <button type="button" class="btn btn-primary" @onclick="SavePage">Save changes</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => modal.Close()">Close</button>
    </Footer>
</Modal>

@code {
    private string botSettings;
    private string newPageText;
    string selectedPageId;
    string selectedPageText;
    string selectedPageName;
    bool isLoading = false;

    string GetDialogTitle() => "Add new page";
    
    List<KnowledgeBasePage> pages = new();
    private Modal modal { get; set; }

    protected async override Task OnInitializedAsync()
    {
        isLoading = true;
        botSettings = await settingsService.GetBotSettings();
        
        pages = await KnowledgeBaseSettingsService.GetPages();
        isLoading = false;
    }

    private async Task SaveBotSettings()
    {
        Console.WriteLine($"saving settings {botSettings}");
        await settingsService.SaveBotSettings(botSettings);
        toastService.ShowSuccess("settings saved");
    }

    private async Task SavePage()
    {
        Console.WriteLine("save page");
        
        await KnowledgeBaseSettingsService.AddPage(newPageText,"");
        
        newPageText = "";
        isLoading = true;
        pages = await KnowledgeBaseSettingsService.GetPages();
        isLoading = false;
        modal.Close();
    }

    private async Task SelectPage(string id,string name,string content)
    {
        Console.WriteLine(selectedPageId);
        Console.WriteLine(selectedPageText);
        Console.WriteLine(selectedPageName);
        selectedPageId = id;
        selectedPageName = name;
        selectedPageText = content;
        StateHasChanged();
    }

    private async Task SavePageContent()
    {
        await api.UpdatePage(selectedPageId, selectedPageName, selectedPageText);
        toastService.ShowSuccess("Page saved");
        isLoading = true;
        StateHasChanged();
        pages = await KnowledgeBaseSettingsService.GetPages();
        isLoading = false;
        StateHasChanged();
    }

}