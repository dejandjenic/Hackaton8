@page "/"
@using Edge.UI.Services
@using Edge.UI.ApiClients
@implements IDisposable
@inject ChatService chatService;
@inject BackendApiClient client;

<PageTitle>Chat</PageTitle>

<div class="chat_messages">
    <ul id="messages">
        @foreach (var message in Messages)
        {
            <li class="@(message.FromUser ? "user" : "system")">
                <div class="msg_info">
                    <div class="msg_info_name">
                        @(message.FromUser ? "You" : "Assistant")
                    </div>
                    <div class="msg_info_name">
                        @message.Date.ToLocalTime().ToString("dd MMM hh:mm")
                    </div>
                </div>
                <div class="msg_text">
                    @message.Text
                </div>
            </li>
        }
    </ul>
</div>
<div class="question_section">
    <textarea @bind="Text" placeholder="Type something ..." class="text_question"></textarea>
    <button @onclick="SendMessage" class="send_button">send</button>
</div>

@code{

    public string Text { get; set; }
    public List<ChatMessage> Messages { get; set; } = new();
    IDisposable messageHandler;
    
    protected async override Task OnInitializedAsync()
    {
        await chatService.Init();
        messageHandler = await chatService.RegisterGptHandler((message) =>
        {
            Messages.Add(new ChatMessage(false,message, DateTime.UtcNow));
            StateHasChanged();
        });
        var historyMessages = await client.ChatHistoryMessages();
        Messages = historyMessages;
        StateHasChanged();
    }
    
    private async Task SendMessage()
    {
        var text = Text;
        Text = "";
        Messages.Add(new ChatMessage(true, text, DateTime.UtcNow));
        await chatService.SendMessage(text);
    }
    
    void IDisposable.Dispose()
    {
        messageHandler.Dispose();
    }
    
}